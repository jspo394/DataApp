sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://news.scibite.com/scibites/news.html?")
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
))
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://news.scibite.com/scibites/news.html?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("http://news.scibite.com/scibites/news.html?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("https://web.whatsapp.com/?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("https://web.whatsapp.com/?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("https://web.whatsapp.com/?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("http://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("http://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=800, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("http://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=800, width=800)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
test <<- paste0("http://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1?")
})
output$frame <- renderUI({
my_test <- tags$iframe(src=test, height=800, width=800)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("https://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1",query)
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://public.tableau.com/app/profile/javier.mauricio.bedoya.gonzalez/viz/Anlisis_Brecha_Digital_Colombia/Hoja1",query)
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione la acción que desea consultar",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL", "Cisco"="CSCO",
"IBM"="IBM", "Facebook"="FB",
"Twitter"="TWTR", "Microsoft"="MSFT",
"Google"="GOOG")),
dateInput(inputId="fechadesde", label="Desde la fecha",
language= "es", width = "40%", value = "2017-01-01"),
dateInput(inputId="fechahasta", label="Hasta la fecha",
language= "es", width = "40%", value = "2017-08-18"),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="google", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo, theme = input$tema)
})
}
shinyApp(ui=ui, server=server)
getSymbols(input$accion, src="yahoo", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
})
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione la acción que desea consultar",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL", "Cisco"="CSCO",
"IBM"="IBM", "Facebook"="FB",
"Twitter"="TWTR", "Microsoft"="MSFT",
"Google"="GOOG")),
dateInput(inputId="fechadesde", label="Desde la fecha",
language= "es", width = "40%", value = "2017-01-01"),
dateInput(inputId="fechahasta", label="Hasta la fecha",
language= "es", width = "40%", value = "2017-08-18"),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo, theme = input$tema)
})
}
shinyApp(ui=ui, server=server)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL")),
dateInput(inputId="fechadesde", label="Desde la fecha",
language= "es", width = "40%", value = "2017-01-01"),
dateInput(inputId="fechahasta", label="Hasta la fecha",
language= "es", width = "40%", value = "2017-08-18"),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL")),
dateInput(inputId="fechadesde", label="Desde la fecha",
language= "es", width = "40%", value = "2017-01-01"),
dateInput(inputId="fechahasta", label="Hasta la fecha",
language= "es", width = "40%", value = "2017-08-18"),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo, theme = input$tema)
})
}
shinyApp(ui=ui, server=server)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL")),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL")),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", from = input$fechadesde,
to = input$fechahasta, auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo, theme = input$tema)
})
}
shinyApp(ui=ui, server=server)
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL")),
selectInput('tema', label = 'Tema', choices = c("Negro"="black", "Blanco"="white")),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo, theme = input$tema)
})
}
shinyApp(ui=ui, server=server)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL" fileInput("file", "Csv o Excel", multiple = TRUE,accept = c(".csv", ".xlsx"))),
)),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
library(shiny)
library(quantmod)
ui<-fluidPage(
titlePanel("Mercados con R"),
sidebarLayout(
sidebarPanel("Seleccione los datos",
selectInput('accion',
label = 'Acción',
choices = c("Apple"="AAPL" fileInput("file", "Csv o Excel", multiple = TRUE,accept = c(".csv", ".xlsx"))),
),
selectInput('tipo', label = 'Tipo de gráfico',
choices = c("Velas"="candlesticks","Barras"="bars", "Línea"="line"))
),
mainPanel("Gráfico de Acciones del Mercado de Valores Americano",
h1('Gráficos de Precios'),
p('A continuación se muestra la gráfica del precio de la acción seleccionada.'),
plotOutput('grafico'))
)
)
server<-function(input, output) {
stockdata <- reactive({
getSymbols(input$accion, src="yahoo", auto.assign = FALSE)
})
output$grafico <- renderPlot({
chartSeries(stockdata(), name = input$accion, type = input$tipo)
})
}
shinyApp(ui=ui, server=server)
shiny::runApp('DatApp')
